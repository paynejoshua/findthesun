{"version":3,"sources":["assets/jumping_pin.gif","components/LoadScreen/index.js","components/DistanceCalculator/index.js","components/ChaseSun/index.js","components/FavsModal/index.js","components/Favorites/index.js","components/WeatherSearch/index.js","utils/delayFunction.js","App.js","reportWebVitals.js","index.js"],"names":["LoadScreen","src","BouncingPin","style","width","height","borderRadius","zoom","DistanceCalc","props","useState","distance","setDistance","lat1","setLat1","lon1","setLon1","lat2","setLat2","lon2","setLon2","deg2rad","deg","Math","PI","useEffect","currentLat","currentLon","destinationLat","destinationLon","R","dLat","dLon","a","sin","cos","c","atan2","sqrt","d","trunc","getDistance","console","log","Button","ChaseSun","variant","size","className","onClick","lonLeft","latBottom","lonRight","latTop","loadingWeather","axios","get","webApiKey","then","res","boxRes","data","list","sunnyPlaces","i","length","weather","icon","name","lat","coord","Lat","lon","Lon","description","toUpperCase","places","hasWeatherLoaded","catch","error","sunny","FavsModal","Modal","show","onHide","Header","closeButton","Body","onChange","e","locationInput","target","value","placeholder","stringVerification","Favorites","favsList","setFavsList","isFavsListLoaded","setIsFavsListLoaded","isFavsModalVisible","setIsFavsModalVisible","locationInputState","setLocationInputState","localStorageArray","setLocalStorageArray","isLocalStorageEmpty","setIsLocalStorageEmpty","reload","setReload","favsArray","promises","getFavoritesArray","JSON","parse","localStorage","getItem","test","promise","webAPIKey","push","object","city","currentTemp","ceil","main","temp","highTemp","temp_max","lowTemp","temp_min","weatherDescription","err","isNaN","Promise","all","currentFavArray","setItem","stringify","Container","fluid","Row","Col","sm","md","lg","xl","xxl","marginTop","map","item","Card","Title","Subtitle","ListGroup","ListGroupItem","WeatherSearch","setCurrentLat","setCurrentLon","setSunny","night","setNight","cloudy","setCloudy","setPlaces","setIcon","setLoadingWeather","setHasWeatherLoaded","currentLocation","setCurrentLocation","isLoadingUserLocation","setIsLoadingUserLocation","setGeoLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","workPromise","delayMs","resolve","reject","delayPromise","delayResolve","setTimeout","results","DelayFunction","clouds","Jumbotron","background","fill","color","borderStyle","checkSun","bool","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76869e81.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/jumping_pin.1ddb6053.gif\";","import React from \"react\"\nimport BouncingPin from \"../../assets/jumping_pin.gif\"\n\n\nfunction LoadScreen(){\n\n    return(\n\n        <>\n        <h1><span><img src={BouncingPin} style={{width: \"3rem\", height: \"3rem\", borderRadius: \"50%\", zoom: \"100%\"}}></img></span> Hold On while we locate you</h1>        \n        </>\n    )\n}\n\nexport default LoadScreen","import React, {useState, useEffect} from \"react\";\nimport Button from \"react-bootstrap/Button\"\n\nfunction DistanceCalc(props){\n    const[distance, setDistance] = useState();\n    const[lat1, setLat1] = useState();\n    const[lon1, setLon1] = useState();\n    const[lat2, setLat2] = useState();\n    const[lon2, setLon2] = useState();\n\n\n    useEffect(() => {\n        setLat1(props.currentLat)\n        setLon1(props.currentLon)\n        setLat2(props.destinationLat)\n        setLon2(props.destinationLon)\n        getDistance(lat1, lon1, lat2, lon2)\n    }, [distance])\n\n\n    function getDistance(lat1,lon1,lat2,lon2) {\n        var R = 3958.8; // Radius of the earth in miles\n        var dLat = deg2rad(lat2-lat1);  // deg2rad below\n        var dLon = deg2rad(lon2-lon1); \n        var a = \n          Math.sin(dLat/2) * Math.sin(dLat/2) +\n          Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * \n          Math.sin(dLon/2) * Math.sin(dLon/2)\n          ; \n        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \n        var d = R * c; // Distance in miles\n        setDistance(Math.trunc(d) + 48);\n      }\n      \n      function deg2rad(deg) {\n        return deg * (Math.PI/180)\n\n\n    }\n    \n      console.log(\"here\", distance)\n      return(\n          <>\n            <p>Around {distance} miles / {Math.trunc(distance / 60)} hours away!</p>\n            {/* pass down props for location and then create button that will load google maps \n            with location directly inputted into url*/}\n            <Button>Take Me There!</Button>\n          </>\n      )\n}\n\nexport default DistanceCalc","import axios from \"axios\";\nimport React from \"react\";\nimport Button from \"react-bootstrap/Button\"\n\nfunction ChaseSun(props){\n    \n    function findSun(){\n    let lonLeft = Math.trunc(props.currentLon)\n    let latBottom = Math.trunc(props.currentLat)\n    let lonRight = lonLeft + 5\n    let latTop = latBottom + 5\n    props.loadingWeather(true)\n    axios.get(`http://api.openweathermap.org/data/2.5/box/city?bbox=${lonLeft},${latBottom},${lonRight},${latTop},10&appid=${props.webApiKey}&units=imperial`)\n    .then(function(res){\n\n        \n        let boxRes = res.data.list\n        let sunnyPlaces = []\n        console.log(res)\n        \n        for(let i=0;i<boxRes.length;i++){\n            if(boxRes[i].weather[0].icon === \"01d\" || boxRes[i].weather[0].icon === \"01n\"){\n                sunnyPlaces[i] = {\n                    name: boxRes[i].name,\n                    lat: boxRes[i].coord.Lat,\n                    lon: boxRes[i].coord.Lon,\n                    weather: boxRes[i].weather[0].description.toUpperCase(),\n                    icon: boxRes[i].weather[0].icon\n                }\n                props.places(sunnyPlaces)\n            } \n        }\n        props.loadingWeather(false)\n        props.hasWeatherLoaded(true)\n        \n    })\n    .catch(function(error){\n        console.log(error)\n        props.loadingWeather(false)\n    })}\n\n    return(\n        <>\n        <Button variant=\"warning\" size=\"sm\" className=\"dropShadow\" onClick={findSun}>{props.sunny ? \"Where else is it sunny?\" : \"Find that Sun!\"}</Button>\n        </>\n    )\n    \n}\n\nexport default ChaseSun","import React from \"react\"\nimport axios from \"axios\"\nimport Modal from \"react-bootstrap/Modal\"\nimport Button from \"react-bootstrap/Button\"\n\nfunction FavsModal(props){\n\n    return(\n        <>\n        <Modal show={props.show} onHide={props.onHide}>\n        \n            <Modal.Header closeButton> Enter By Zip or City Name</Modal.Header>\n            <Modal.Body>\n                <input onChange={(e) => props.locationInput(e.target.value)} placeholder=\"Enter Zip or City Name\"></input>\n                <Button  onClick={props.stringVerification}>Add</Button>\n            </Modal.Body>\n\n      \n\n        </Modal>\n       \n        </>\n    )\n}\n\nexport default FavsModal\n\n\n \n\n// Eventually this will need to be set in LocalStorage for Favorites component to get info from.","import React, {useState, useEffect, } from \"react\";\nimport FavLocals from \"../FavLocals\";\nimport DelayFunction from \"../../utils/delayFunction\";\nimport axios from \"axios\";\nimport Container from \"react-bootstrap/Container\"\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport ListGroupItem from \"react-bootstrap/ListGroupItem\";\nimport Button from \"react-bootstrap/Button\";\nimport FavsModal from \"../FavsModal\"\n\n\nfunction Favorites(props){\n    const[favsList, setFavsList] = useState([]);\n    const[isFavsListLoaded, setIsFavsListLoaded] = useState(true);\n    const[isFavsModalVisible, setIsFavsModalVisible] = useState(false);\n    const[locationInputState, setLocationInputState] = useState();\n    const[localStorageArray, setLocalStorageArray] = useState([]);\n    const[isLocalStorageEmpty, setIsLocalStorageEmpty] = useState()\n    const[reload, setReload] = useState(false)\n\n\n    useEffect(() =>{\n            let favsArray = []\n            let promises =  []\n            \n            const getFavoritesArray = JSON.parse(localStorage.getItem(\"favoriteLocations\") || '0')\n\n\n            if(!getFavoritesArray){\n                console.log(\"no favorites in LS\")\n                setIsLocalStorageEmpty(true)\n                setReload(false)\n            } \n            else {\n            setIsLocalStorageEmpty(false)\n            console.log(\"ls GET\", getFavoritesArray)\n            setReload(false)\n            \n            setLocalStorageArray(getFavoritesArray)\n\n            for(let i=0; i<getFavoritesArray.length; i++){\n                console.log(\"localStorageValues\", getFavoritesArray[i])\n                \n                if(/^[a-zA-Z _]+$/.test(getFavoritesArray[i])){\n                let promise = axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${getFavoritesArray[i]}&appid=${props.webAPIKey}&units=imperial`)\n                promises.push(promise)\n\n                promise.then(function(res){\n                    let object = {\n                        city: res.data.name,\n                        currentTemp: Math.ceil(res.data.main.temp),\n                        highTemp: Math.ceil(res.data.main.temp_max),\n                        lowTemp: Math.ceil(res.data.main.temp_min),\n                        icon: res.data.weather[0].icon,\n                        weatherDescription: res.data.weather[0].description\n                    }\n                    favsArray.push(object)                    \n                    \n                })\n                .catch(function(err){\n                console.log(\"error:\", err)\n                })\n                }\n                else if(isNaN(getFavoritesArray[i]) == false){\n                    let promise = axios.get(`http://api.openweathermap.org/data/2.5/weather?zip=${getFavoritesArray[i]}&appid=${props.webAPIKey}&units=imperial`)\n                promises.push(promise)\n\n                promise.then(function(res){\n                    let object = {\n                        city: res.data.name,\n                        currentTemp: Math.ceil(res.data.main.temp),\n                        highTemp: Math.ceil(res.data.main.temp_max),\n                        lowTemp: Math.ceil(res.data.main.temp_min),\n                        icon: res.data.weather[0].icon,\n                        weatherDescription: res.data.weather[0].description\n                    }\n                    favsArray.push(object)                    \n                    \n                })\n                .catch(function(err){\n                console.log(\"error:\", err)\n                })\n                }\n\n\n            }\n            \n            Promise.all(promises).then(() => {\n                setIsFavsListLoaded(true)\n                setFavsList(favsArray)\n            })\n                }\n            \n        \n        \n\n    }, [reload])\n\n    console.log(locationInputState)\n\n    function openFavModal(){\n        setIsFavsModalVisible(true)\n    }\n\n    function locationStringVerification(){\n        if(/^[a-zA-Z _]+$/.test(locationInputState)){\n            setIsFavsModalVisible(false)\n            console.log(\"this is a city\")\n\n            let currentFavArray = localStorageArray\n\n            currentFavArray.push(locationInputState)\n\n            setLocalStorageArray(currentFavArray)\n            \n            localStorage.setItem(`favoriteLocations`, JSON.stringify(currentFavArray))  \n            setIsLocalStorageEmpty(false) \n            setReload(true)                \n            axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${locationInputState}&appid=${props.webAPIKey}&units=imperial`)\n            .then(function(res){\n                console.log(res.data)\n            })\n            .catch(function(err){\n                console.log(err)\n            })\n        } else if(isNaN(locationInputState) == false && locationInputState.length == 5){\n            setIsFavsModalVisible(false)\n\n            console.log(\"this is a zip\")\n\n            let currentFavArray = localStorageArray\n\n            currentFavArray.push(locationInputState)\n\n            setLocalStorageArray(currentFavArray)\n            \n            localStorage.setItem(`favoriteLocations`, JSON.stringify(currentFavArray))\n            setIsLocalStorageEmpty(false)\n            setReload(true)\n            axios.get(`http://api.openweathermap.org/data/2.5/weather?zip=${locationInputState}&appid=${props.webAPIKey}&units=imperial`)\n            .then(function(res){\n                console.log(res.data)\n            })\n            .catch(function(err){\n                console.log(err)\n            })\n        } else {\n            console.log(\"Incorrect input given. Please provide a valid City or 5 digit Zip code\")\n        }\n\n    }\n\n    \n    return(\n        <>\n        <FavsModal \n        locationInput={setLocationInputState} \n        show={isFavsModalVisible} onHide={() => setIsFavsModalVisible(false)}\n        stringVerification={locationStringVerification}></FavsModal>\n        <Container fluid>\n        \n           \n       \n       \n     \n            {isFavsListLoaded\n            ? <Row>\n                <Col sm={12} md={12} lg={12} xl={12} xxl={12}>\n                <Button className=\"dropShadow\" variant=\"warning\" size=\"sm\" onClick={openFavModal}>Add A Favorite</Button>\n                <div style={{ marginTop: \"1rem\"}}>{isLocalStorageEmpty ? \"No Favorites Added Yet\" : \"Favorites:\" }</div>\n                </Col>\n               \n            {favsList.map(item => (\n                <Col key={item.city}>\n                    <Card style={{width: \"18rem\"}} className=\"dropShadow mt-3 mb-3\">\n                        <Card.Body>\n                        <Card.Title>City: {item.city}</Card.Title>\n                            <Card.Subtitle className=\"mb-2 text-muted\">Current Temperature: {item.currentTemp}°</Card.Subtitle>\n                        </Card.Body>\n                        <ListGroup className=\"list-group-flush\">\n                            <ListGroupItem>Current Weather Conditions: {item.weatherDescription}</ListGroupItem>\n                            <ListGroupItem>High: {item.highTemp}°</ListGroupItem>\n                            <ListGroupItem>Low: {item.lowTemp}°</ListGroupItem>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n            ))}\n            </Row>\n            \n            : <div> Favorites Loading...</div>\n                \n        }\n        </Container>\n            \n        </>\n    )\n}\n\nexport default Favorites\n\n// For local storage\n    // Since LS has to be a unique key. You could set the value to be an object\n    // that gets updated when a new favorite location is added. \n\n// This article explains setting favorite items in LS:\n    // https://medium.com/wesionary-team/creating-favorites-list-using-localstorage-in-react-part-i-22692bc0f153","import React, {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport {Moon} from \"react-feather\";\nimport {Sun} from \"react-feather\";\nimport {Cloud} from \"react-feather\";\nimport LoadScreen from \"../LoadScreen\";\nimport Container from \"react-bootstrap/Container\"\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport DistanceCalc from \"../DistanceCalculator\";\nimport DelayFunction from \"../../utils/delayFunction\";\nimport ChaseSun from \"../ChaseSun\";\nimport Favorites from \"../Favorites\";\n\n\nfunction WeatherSearch(props){\n    const[webApiKey] = useState(\"a4a8fbe7c144be93020e3a7f15b622db\")\n    const[currentLat, setCurrentLat] = useState()\n    const[currentLon, setCurrentLon] = useState()\n    const[sunny, setSunny] = useState()\n    const[night, setNight] = useState()\n    const[cloudy, setCloudy] = useState()\n    const[places, setPlaces] = useState([])\n    const[icon, setIcon] = useState()\n    const[loadingWeather, setLoadingWeather] = useState(false)\n    const[hasWeatherLoaded, setHasWeatherLoaded] = useState(false)\n    const[currentLocation, setCurrentLocation] = useState()\n    const[isLoadingUserLocation, setIsLoadingUserLocation] = useState(true)\n    const[geoLocation, setGeoLocation] = useState(false)\n\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition(function(position){\n            setGeoLocation(true)\n            setCurrentLat(position.coords.latitude)\n            setCurrentLon(position.coords.longitude)\n            getCurrentWeather(position.coords.latitude, position.coords.longitude)\n        })\n\n               \n    }, [currentLat, currentLon])\n\n\n    function getCurrentWeather(lat, lon){\n        setIsLoadingUserLocation(true)\n        console.log(\"start\")\n        DelayFunction(axios.get(`http://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${webApiKey}&units=imperial`),0)\n        .then(function(res){\n            console.log(\"local weather\", res)\n            setIcon(res.data.weather[0].icon)\n           \n            setCurrentLocation(res.data.name)\n            \n            if(res.data.clouds.all <= 10){\n                setSunny(true)\n                setNight(false)\n                setCloudy(false)\n                \n            } else if (res.data.weather[0].icon === \"01n\" || res.data.weather[0].icon === \"04n\") {\n                setNight(true)\n                setSunny(false)\n                setCloudy(false)\n            }\n            \n            else if (res.data.clouds.all > 10){\n                setSunny(false)\n                setCloudy(true)\n                setNight(false)\n            } else {\n                setSunny(false)\n                setCloudy(false)\n                setNight(false)\n            }\n\n\n            setIsLoadingUserLocation(false)\n            console.log(\"end\")\n            \n        }).catch(function (error) {\n            console.log(error)\n            setIsLoadingUserLocation(false)\n\n        })\n\n    }\n\n    \n\n    return(\n        <>\n            {/* <input placeholder=\"City:\" onChange={((e) => setCity(e.target.value))}></input>\n            <input placeholder=\"State:\" onChange={((e) => setState(e.target.value))}></input>\n            <button onClick={(() => switchSearch())}>Search</button> */}\n\n            \n            <Jumbotron className={cloudy ? \"cloudy\" : \"\"} style={ \n                sunny ? {background: \"linear-gradient(180deg,#b8a9af,#FFDF00)\"} \n                    : night ? {background: \"black\"} \n                        : {}}>\n\n            {\n                night \n                ? <Moon style={{fill: \"white\"}} />\n                    : sunny ? <Sun />\n                        : cloudy ? <Cloud style={{color: \"white\"}}/>\n                            : <div/>\n            }\n            \n            {\n            isLoadingUserLocation \n            ? \n            \n            <LoadScreen />\n                : sunny ? <h2>Congrats it's sunny in {currentLocation}!</h2>\n                    : cloudy ? <h2 style={{color: \"white\"}}>Looks like it's cloudy in {currentLocation}</h2>\n                        : night ? <h2 style={{color: \"white\"}}>Go to sleep, and good night, may the sun shine brightly tomorrow in {currentLocation}</h2>\n                            : <h2>Oh dear...it looks like it's not sunny in {currentLocation}</h2>\n            }\n                \n            </Jumbotron>\n            <br />\n            \n            {\n            isLoadingUserLocation\n            ? <>Please Hold...</>\n            \n            :   <Container fluid>\n                <Row>\n          \n                  \n\n                    <Col sm={12} md={6} lg={6} xl={6} style={{borderStyle: \"solid\"}}>\n        \n                        <ChaseSun \n                            checkSun={sunny}\n                            currentLat={currentLat} \n                            currentLon={currentLon}\n                            webApiKey={webApiKey} \n                            loadingWeather={(bool) => setLoadingWeather(bool)}\n                            hasWeatherLoaded={(bool) => setHasWeatherLoaded(bool)}\n                            places={(places) => setPlaces(places)}>\n                                \n                        </ChaseSun>\n\n                        {\n                            hasWeatherLoaded \n                            ? <p style={{ marginTop: \"1rem\"}}>It is currently sunny here: </p>\n                          \n                            : <p style={{ marginTop: \"1rem\"}}>Just waiting on you to click on that button</p>\n                            \n                        }\n\n                        {places.map(item => (\n                            <Col key={item.name}>\n                                <Card style={{width: '18rem'}} className=\"sunny mt-5 dropShadow\">\n                                        <Sun style={{fill: \"orange\"}} />\n                                        <Card.Title>{item.name}</Card.Title>\n                                        <Card.Body className=\"sunny\">\n                                    {item.weather}\n                                        <DistanceCalc currentLat={currentLat} currentLon={currentLon} \n                                        destinationLat={item.lat} destinationLon={item.lon}/>\n                                        </Card.Body>\n\n                                </Card>\n                            </Col>\n                  \n                        ))} \n\n\n\n                        \n                    </Col>\n                \n\n                    <Col sm={12} md={6} lg={6} xl={6} style={{ borderStyle: \"solid\"}}>\n                    <Favorites webAPIKey={webApiKey}/>\n            \n                    </Col>\n            </Row>\n           \n                </Container>   \n            }\n\n             \n        </>\n    )\n}\n\nexport default WeatherSearch\n","export default function RunWithDelay(workPromise, delayMs = 1000) {\n    const awaitedPromise = new Promise((resolve, reject) => {\n        // Resolve the delay promise after a timeout.\n        const delayPromise = new Promise((delayResolve) =>\n            setTimeout(delayResolve, delayMs)\n        );\n\n        // Wait for both the work and the delay to complete before resolving.\n        Promise.all([workPromise, delayPromise])\n            .then((results) => { \n                // Resolve with the results of the work.\n                resolve(results[0]);\n            })\n            .catch((error) => {\n                reject(error);\n            });\n    })\n\n    return awaitedPromise;\n\n};","import './App.css';\nimport React from \"react\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport WeatherSearch from \"./components/WeatherSearch\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport LoadingScreen from \"./components/LoadScreen\"\n \n\n\nfunction App() {\n\n\nreturn (\n    <>\n    \n    <WeatherSearch />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}